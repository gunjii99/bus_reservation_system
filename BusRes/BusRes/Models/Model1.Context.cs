//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusRes.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbNewBusEntities8 : DbContext
    {
        public dbNewBusEntities8()
            : base("name=dbNewBusEntities8")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblAdmin> tblAdmins { get; set; }
        public virtual DbSet<tblBooking> tblBookings { get; set; }
        public virtual DbSet<tblBu> tblBus { get; set; }
        public virtual DbSet<tblCancellation> tblCancellations { get; set; }
        public virtual DbSet<tblCustomer> tblCustomers { get; set; }
        public virtual DbSet<tblFeedback> tblFeedbacks { get; set; }
        public virtual DbSet<tblReturnTicket> tblReturnTickets { get; set; }
    
        public virtual ObjectResult<Betweentwodates_Result> Betweentwodates(string startDate, string endDate)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Betweentwodates_Result>("Betweentwodates", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<BUS_SEARCH_Result> BUS_SEARCH(string source_, string destination)
        {
            var source_Parameter = source_ != null ?
                new ObjectParameter("Source_", source_) :
                new ObjectParameter("Source_", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BUS_SEARCH_Result>("BUS_SEARCH", source_Parameter, destinationParameter);
        }
    
        public virtual ObjectResult<string> Fetch_paymentid(Nullable<int> bookingID)
        {
            var bookingIDParameter = bookingID.HasValue ?
                new ObjectParameter("bookingID", bookingID) :
                new ObjectParameter("bookingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Fetch_paymentid", bookingIDParameter);
        }
    
        public virtual ObjectResult<string> fetchpaymentbyemail(string source_B, string destination_B, string startDate, string startTime, string ticketType, Nullable<float> travelFare, string emailId)
        {
            var source_BParameter = source_B != null ?
                new ObjectParameter("Source_B", source_B) :
                new ObjectParameter("Source_B", typeof(string));
    
            var destination_BParameter = destination_B != null ?
                new ObjectParameter("Destination_B", destination_B) :
                new ObjectParameter("Destination_B", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var ticketTypeParameter = ticketType != null ?
                new ObjectParameter("TicketType", ticketType) :
                new ObjectParameter("TicketType", typeof(string));
    
            var travelFareParameter = travelFare.HasValue ?
                new ObjectParameter("TravelFare", travelFare) :
                new ObjectParameter("TravelFare", typeof(float));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("fetchpaymentbyemail", source_BParameter, destination_BParameter, startDateParameter, startTimeParameter, ticketTypeParameter, travelFareParameter, emailIdParameter);
        }
    
        public virtual ObjectResult<string> fetchpaymentbyemail1(string source_B, string destination_B, string startDate, string startTime, Nullable<float> travelFare, string emailId)
        {
            var source_BParameter = source_B != null ?
                new ObjectParameter("Source_B", source_B) :
                new ObjectParameter("Source_B", typeof(string));
    
            var destination_BParameter = destination_B != null ?
                new ObjectParameter("Destination_B", destination_B) :
                new ObjectParameter("Destination_B", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var travelFareParameter = travelFare.HasValue ?
                new ObjectParameter("TravelFare", travelFare) :
                new ObjectParameter("TravelFare", typeof(float));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("fetchpaymentbyemail1", source_BParameter, destination_BParameter, startDateParameter, startTimeParameter, travelFareParameter, emailIdParameter);
        }
    
        public virtual ObjectResult<string> fetchpaymentid(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("fetchpaymentid", usernameParameter);
        }
    
        public virtual ObjectResult<FrequentlyTravel_Result> FrequentlyTravel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FrequentlyTravel_Result>("FrequentlyTravel");
        }
    
        public virtual ObjectResult<Nullable<float>> RefundNew(string paymentid)
        {
            var paymentidParameter = paymentid != null ?
                new ObjectParameter("paymentid", paymentid) :
                new ObjectParameter("paymentid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<float>>("RefundNew", paymentidParameter);
        }
    }
}
